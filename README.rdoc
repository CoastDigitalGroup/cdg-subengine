{<img src="https://hakiri.io/github/CoastDigitalGroup/cdg-subengine/master.svg" alt="security" />}[https://hakiri.io/github/CoastDigitalGroup/cdg-subengine/master]
{<img src="https://codeclimate.com/github/CoastDigitalGroup/cdg-subengine/badges/gpa.svg" />}[https://codeclimate.com/github/CoastDigitalGroup/cdg-subengine]
{<img src="https://coveralls.io/repos/CoastDigitalGroup/cdg-subengine/badge.svg" alt="Coverage Status" />}[https://coveralls.io/r/CoastDigitalGroup/cdg-subengine]
{<img src="https://travis-ci.org/CoastDigitalGroup/cdg-subengine.svg?branch=master" alt="Build Status" />}[https://travis-ci.org/CoastDigitalGroup/cdg-subengine]

= CDG Subengine Multi-Tenant Rails Engine

CoastDigitalGroup subengine gem adds multi-tenancy and additional user account management features to super secure rails devise authentication system.

Users can now have multiple accounts, features subdomain data scoping, a central for all login page and sub-domain login pages. Subengine can be adapted to any project or start fresh with substarter multi-tenancy starter app.

* See our Github Wiki or Website for More information

===== Step 1 - Install CDG Subengine GEM
* Install GEM: gem install subengine  
* Bundle File: gem 'subengine', '~> 0.9.9.4'  
* Run Command: bundle exec install  

===== Step 2 - Configure ActionMailer
* Sign up will fail if there's no mailer function.
* Mailer is used for confirmation and password forget functions.

===== Step 3 - Mount the Engine
* At the bottom of your routes.rb add
* mount Subengine::Engine, :at => '/'

===== Step 4 - Constrain the routs you want secured
* Copy the two lines of code below.
* Insert routes you want secure in-between code below:
* constraints(Subengine::Constraints::SubdomainRequired) do
* end
  
  
==== Licence and Terms of Use

This project rocks and uses MIT-LICENSE and is open sourced. 

Notice: Some major changes can break applications and we cannot be held liable for use of this engine. Please thoroughly test any updates before pushing to production.